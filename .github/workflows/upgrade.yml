# ~~ Generated by projen. To modify, edit .projenrc.ts and run "npx projen".

name: upgrade
on:
  workflow_dispatch: {}
  schedule:
    - cron: 0 0 * * *
jobs:
  upgrade:
    name: Upgrade
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      patch_created: ${{ steps.create_patch.outputs.patch_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: echo "NEXT_PUBLIC_ELASTICSEARCH_API_KEY=testing" >> $GITHUB_ENV
      - run: echo "NEXT_PUBLIC_ELASTICSEARCH_ENDPOINT=testing" >> $GITHUB_ENV
      - run: echo "NEXT_PUBLIC_MAPBOX_TOKEN=testing" >> $GITHUB_ENV
      - run: echo "DATABASE_URL=${{ secrets.DB_URL }}" >> $GITHUB_ENV
      - run: echo "NEXT_PUBLIC_GA_ID=${{ secrets.GA_ID }}" >> $GITHUB_ENV
      - uses: vbem/kubeconfig4sa@v1
        with:
          server: https://b6ca91f2-516c-4882-90fe-b232d3b2b33b.api.k8s.pl-waw.scw.cloud:6443
          ca-base64: ${{ secrets.K8S_CA_BASE64 }}
          token: ${{ secrets.K8S_SA_TOKEN }}
          namespace: persistence
      - uses: vbem/k8s-port-forward@v1
        with:
          workload: svc/postgres-cluster-repl
          mappings: 5432:5432
      - uses: actions/cache@v3
        with:
          path: |-
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          restore-keys: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: npm
      - name: Install dependencies
        run: npm ci
      - name: Upgrade dependencies
        run: npx projen upgrade
      - name: Find mutations
        id: create_patch
        run: |-
          git add .
          git diff --staged --patch --exit-code > .repo.patch || echo "patch_created=true" >> $GITHUB_OUTPUT
      - name: Upload patch
        if: steps.create_patch.outputs.patch_created
        uses: actions/upload-artifact@v3
        with:
          name: .repo.patch
          path: .repo.patch
  pr:
    name: Create Pull Request
    needs: upgrade
    runs-on: ubuntu-latest
    permissions:
      contents: read
    if: ${{ needs.upgrade.outputs.patch_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with: {}
      - name: Download patch
        uses: actions/download-artifact@v3
        with:
          name: .repo.patch
          path: ${{ runner.temp }}
      - name: Apply patch
        run: '[ -s ${{ runner.temp }}/.repo.patch ] && git apply ${{ runner.temp }}/.repo.patch || echo "Empty patch. Skipping."'
      - name: Set git identity
        run: |-
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      - name: Create Pull Request
        id: create-pr
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.PROJEN_GITHUB_TOKEN }}
          commit-message: |-
            chore(deps): upgrade dependencies

            Upgrades project dependencies. See details in [workflow run].

            [Workflow Run]: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            ------

            *Automatically created by projen via the "upgrade" workflow*
          branch: github-actions/upgrade
          title: "chore(deps): upgrade dependencies"
          labels: auto-approve
          body: |-
            Upgrades project dependencies. See details in [workflow run].

            [Workflow Run]: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

            ------

            *Automatically created by projen via the "upgrade" workflow*
          author: github-actions <github-actions@github.com>
          committer: github-actions <github-actions@github.com>
          signoff: true
