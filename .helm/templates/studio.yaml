---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-oauth2-proxy
  labels:
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/name: {{ .Chart.Name }}-auth-proxy
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}-auth-proxy
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}-auth-proxy
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
        - args:
            - --provider=github
            - --email-domain=*
            - --upstream=file:///dev/null
            - --http-address=0.0.0.0:4180
          envFrom:
            - secretRef:
                name: studio-oauth-secret
          image: quay.io/oauth2-proxy/oauth2-proxy:latest
          imagePullPolicy: Always
          name: oauth2-proxy
          ports:
            - containerPort: 4180
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-oauth2-proxy-svc
  labels:
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/name: {{ .Chart.Name }}-auth-proxy
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  ports:
    - name: http
      port: 4180
      protocol: TCP
      targetPort: 4180
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}-auth-proxy
    app.kubernetes.io/instance: {{ .Release.Name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-studio
  labels:
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/name: {{ .Chart.Name }}-studio
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: {{ .Values.defaultReplicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Chart.Name }}-studio
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Chart.Name }}-studio
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.image.pullSecret }}
      containers:
        - name: {{ .Release.Name }}-studio
          image: {{ .Values.werf.image.kinguru }}
          imagePullPolicy: IfNotPresent
          command: ["npx"]
          args: ["prisma", "studio"]
          env:
            - name: "OTEL_EXPORTER_OTLP_ENDPOINT"
              value: "http://tempo.observability.svc.cluster.local:4318/"
          envFrom:
            - secretRef:
                name: kr-prod-environment-vars
          ports:
            - containerPort: 5555
              protocol: TCP
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 5555
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
            initialDelaySeconds: 60
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 5555
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
            initialDelaySeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-studio-svc
  labels:
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app.kubernetes.io/name: {{ .Chart.Name }}-studio
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-tls
spec:
  selector:
    app.kubernetes.io/name: {{ .Chart.Name }}-studio
    app.kubernetes.io/instance: {{ .Release.Name }}
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 5555
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-studio
  labels:
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    app.kubernetes.io/name: {{ .Release.Name }}-studio
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-tls
    nginx.ingress.kubernetes.io/auth-url: "https://$host/oauth2/auth"
    nginx.ingress.kubernetes.io/auth-signin: "https://$host/oauth2/start?rd=$escaped_request_uri"
spec:
  ingressClassName: nginx
  rules:
    - host: studio.kinguru.io
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-studio-svc
                port:
                  number: 80
  tls:
    - hosts:
        - studio.kinguru.io
      secretName: letsencrypt-tls-studio
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-auth2-proxy
  labels:
    helm.sh/chart: {{ $.Chart.Name }}-{{ $.Chart.Version }}
    app.kubernetes.io/name: {{ .Release.Name }}-auth2-proxy
    app.kubernetes.io/instance: {{ $.Release.Name }}
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
spec:
  ingressClassName: nginx
  rules:
    - host: studio.kinguru.io
      http:
        paths:
          - path: /oauth2
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-oauth2-proxy-svc
                port:
                  number: 4180
  tls:
    - hosts:
        - studio.kinguru.io
      secretName: letsencrypt-tls-studio
